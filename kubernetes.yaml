apiVersion: v1
kind: Secret
metadata:
  name: web-dvwa
  namespace: web-dvwa
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: ZHZ3YQ==
  MYSQL_DATABASE: ZHZ3YQ==
  MYSQL_USER: ZHZ3YQ==
  MYSQL_PASSWORD: cEBzc3cwcmQ=
  DB_SERVER: d2ViLWR2d2EtZGItc3Zj
---
apiVersion: v1
kind: Secret
metadata:
  name: create-db
  namespace: web-dvwa
type: Opaque
data:
  create-sql: RFJPUCBEQVRBQkFTRSBJRiBFWElTVFMgZHZ3YTsNCkNSRUFURSBEQVRBQkFTRSBkdndhOw0KVVNFIGR2d2E7DQpDUkVBVEUgVEFCTEUgdXNlcnMgKHVzZXJfaWQgaW50KDYpLGZpcnN0X25hbWUgdmFyY2hhcigxNSksbGFzdF9uYW1lIHZhcmNoYXIoMTUpLCB1c2VyIHZhcmNoYXIoMTUpLCBwYXNzd29yZCB2YXJjaGFyKDMyKSxhdmF0YXIgdmFyY2hhcig3MCksIGxhc3RfbG9naW4gVElNRVNUQU1QLCBmYWlsZWRfbG9naW4gSU5UKDMpLCBQUklNQVJZIEtFWSAodXNlcl9pZCkpOw0KSU5TRVJUIElOVE8gdXNlcnMgVkFMVUVTDQogICAgICAgICgnMScsJ2FkbWluJywnYWRtaW4nLCdhZG1pbicsTUQ1KCdwYXNzd29yZCcpLCcvaGFja2FibGUvdXNlcnMvYWRtaW4uanBnJywgTk9XKCksICcwJyksDQogICAgICAgICgnMicsJ0dvcmRvbicsJ0Jyb3duJywnZ29yZG9uYicsTUQ1KCdhYmMxMjMnKSwnL2hhY2thYmxlL3VzZXJzL2dvcmRvbmIuanBnJywgTk9XKCksICcwJyksDQogICAgICAgICgnMycsJ0hhY2snLCdNZScsJzEzMzcnLE1ENSgnY2hhcmxleScpLCcvaGFja2FibGUvdXNlcnMvMTMzNy5qcGcnLCBOT1coKSwgJzAnKSwNCiAgICAgICAgKCc0JywnUGFibG8nLCdQaWNhc3NvJywncGFibG8nLE1ENSgnbGV0bWVpbicpLCcvaGFja2FibGUvdXNlcnMvcGFibG8uanBnJywgTk9XKCksICcwJyksDQogICAgICAgICgnNScsJ0JvYicsJ1NtaXRoJywnc21pdGh5JyxNRDUoJ3Bhc3N3b3JkJyksJy9oYWNrYWJsZS91c2Vycy9zbWl0aHkuanBnJywgTk9XKCksICcwJyk7DQpDUkVBVEUgVEFCTEUgZ3Vlc3Rib29rIChjb21tZW50X2lkIFNNQUxMSU5UIFVOU0lHTkVEIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULCBjb21tZW50IHZhcmNoYXIoMzAwKSwgbmFtZSB2YXJjaGFyKDEwMCksIFBSSU1BUlkgS0VZIChjb21tZW50X2lkKSk7DQpJTlNFUlQgSU5UTyBndWVzdGJvb2sgVkFMVUVTICgnMScsJ1RoaXMgaXMgYSB0ZXN0IGNvbW1lbnQuJywndGVzdCcpOw==  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-dvwa-db
  namespace: web-dvwa
spec:
  selector:
    matchLabels:
      app: web-dvwa-db
  template:
    metadata:
      labels:
        app: web-dvwa-db
    spec:
      containers:
      - name: web-dvwa-db
        image: docker.io/library/mariadb:10
        ports:
        - containerPort: 3306
        envFrom:
        - secretRef:
            name: web-dvwa
---
apiVersion: v1
kind: Service
metadata:
  name: web-dvwa-db-svc
  namespace: web-dvwa
spec:
  selector:
    app: web-dvwa-db
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-dvwa-web
  namespace: web-dvwa
spec:
  selector:
    matchLabels:
      app: web-dvwa-web
  template:
    metadata:
      labels:
        app: web-dvwa-web
    spec:
      volumes:
        - name: create-db
          secret:
            secretName: create-db
      containers:
      - name: web-dvwa-web
        image: gulacedia/web-dvwa-new:v3
        ports:
        - containerPort: 80
      initContainers:
      - name: create-db
        image: docker.io/library/mariadb:10
        command: ["/bin/sh"]
        args: ["-c", "mysql -h web-dvwa-db-svc -u dvwa -pp@ssw0rd dvwa < /etc/create-db/create-sql"]
        ports:
        - containerPort: 3306
        volumeMounts:
          - name: create-db
            mountPath: "/etc/create-db"
---
apiVersion: v1
kind: Service
metadata:
  name: web-dvwa-service
  namespace: web-dvwa
spec:
  selector:
    app: web-dvwa-web
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: web-dvwa-gateway
  namespace: web-dvwa
spec:
  # The selector matches the ingress gateway pod labels.
  # If you installed Istio using Helm following the standard documentation, this would be "istio=ingress"
  selector:
    app: istio-ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "web-dvwa.example.com"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: web-dvwa
  namespace: web-dvwa
spec:
  hosts:
  - "web-dvwa.example.com"
  gateways:
  - web-dvwa-gateway
  http:
  - route:
    - destination:
        port:
          number: 80
        host: web-dvwa-service